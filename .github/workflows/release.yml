name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build Release Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-linux
          - os: macos-latest
            target: x86_64-macos
          - os: macos-latest
            target: aarch64-macos

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.15.1

    - name: Build release binary
      run: zig build -Doptimize=ReleaseFast

    - name: Package binary
      run: |
        mkdir -p release
        cp zig-out/bin/* release/
        tar -czf smtp-server-${{ matrix.target }}.tar.gz -C release .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: smtp-server-${{ matrix.target }}
        path: smtp-server-${{ matrix.target }}.tar.gz

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/smtp-server:latest
          ${{ secrets.DOCKER_USERNAME }}/smtp-server:${{ steps.version.outputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build, docker]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Extract changelog entry
      id: changelog
      run: |
        if [ -f "CHANGELOG.md" ]; then
          # Try to extract the section for this version from CHANGELOG.md
          VERSION="${{ steps.version.outputs.VERSION }}"
          CHANGELOG=$(awk "/## \[${VERSION}\]/,/## \[/" CHANGELOG.md | sed '$d' || echo "")
          if [ -n "$CHANGELOG" ]; then
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGELOG" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "RELEASE_NOTES=" >> $GITHUB_OUTPUT
          fi
        else
          echo "RELEASE_NOTES=" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          smtp-server-x86_64-linux/smtp-server-x86_64-linux.tar.gz
          smtp-server-x86_64-macos/smtp-server-x86_64-macos.tar.gz
          smtp-server-aarch64-macos/smtp-server-aarch64-macos.tar.gz
        body: |
          ${{ steps.changelog.outputs.RELEASE_NOTES }}

          ## Release Info
          - Version: ${{ steps.version.outputs.VERSION }}
          - Docker Image: `${{ secrets.DOCKER_USERNAME }}/smtp-server:${{ steps.version.outputs.VERSION }}`

          ## Installation

          Download the appropriate binary for your platform from the assets below.

          ### Docker
          ```bash
          docker pull ${{ secrets.DOCKER_USERNAME }}/smtp-server:${{ steps.version.outputs.VERSION }}
          ```

          ðŸ¦Ž This release was created using [zig-bump](https://github.com/stacksjs/zig-bump)
        draft: false
        prerelease: false
        generate_release_notes: ${{ steps.changelog.outputs.RELEASE_NOTES == '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
